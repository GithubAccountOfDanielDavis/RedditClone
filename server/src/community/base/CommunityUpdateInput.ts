/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { UserUpdateManyWithoutCommunitiesInput } from "./UserUpdateManyWithoutCommunitiesInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { PostUpdateManyWithoutCommunitiesInput } from "./PostUpdateManyWithoutCommunitiesInput";
@InputType()
class CommunityUpdateInput {
  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutCommunitiesInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutCommunitiesInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutCommunitiesInput, {
    nullable: true,
  })
  moderators?: UserUpdateManyWithoutCommunitiesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  owner?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => PostUpdateManyWithoutCommunitiesInput,
  })
  @ValidateNested()
  @Type(() => PostUpdateManyWithoutCommunitiesInput)
  @IsOptional()
  @Field(() => PostUpdateManyWithoutCommunitiesInput, {
    nullable: true,
  })
  posts?: PostUpdateManyWithoutCommunitiesInput;

  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutCommunitiesInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutCommunitiesInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutCommunitiesInput, {
    nullable: true,
  })
  subscribers?: UserUpdateManyWithoutCommunitiesInput;
}
export { CommunityUpdateInput };
