/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { UserCreateNestedManyWithoutCommunitiesInput } from "./UserCreateNestedManyWithoutCommunitiesInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { PostCreateNestedManyWithoutCommunitiesInput } from "./PostCreateNestedManyWithoutCommunitiesInput";
@InputType()
class CommunityCreateInput {
  @ApiProperty({
    required: false,
    type: () => UserCreateNestedManyWithoutCommunitiesInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutCommunitiesInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutCommunitiesInput, {
    nullable: true,
  })
  moderators?: UserCreateNestedManyWithoutCommunitiesInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @Field(() => UserWhereUniqueInput)
  owner!: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => PostCreateNestedManyWithoutCommunitiesInput,
  })
  @ValidateNested()
  @Type(() => PostCreateNestedManyWithoutCommunitiesInput)
  @IsOptional()
  @Field(() => PostCreateNestedManyWithoutCommunitiesInput, {
    nullable: true,
  })
  posts?: PostCreateNestedManyWithoutCommunitiesInput;

  @ApiProperty({
    required: false,
    type: () => UserCreateNestedManyWithoutCommunitiesInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutCommunitiesInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutCommunitiesInput, {
    nullable: true,
  })
  subscribers?: UserCreateNestedManyWithoutCommunitiesInput;
}
export { CommunityCreateInput };
