/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CommentLike } from "../../commentLike/base/CommentLike";
import { ValidateNested, IsOptional, IsDate, IsString } from "class-validator";
import { Type } from "class-transformer";
import { Comment } from "../../comment/base/Comment";
import { Community } from "../../community/base/Community";
import { PostLike } from "../../postLike/base/PostLike";
import { Post } from "../../post/base/Post";
@ObjectType()
class User {
  @ApiProperty({
    required: false,
    type: () => [CommentLike],
  })
  @ValidateNested()
  @Type(() => CommentLike)
  @IsOptional()
  commentLikes?: Array<CommentLike>;

  @ApiProperty({
    required: false,
    type: () => [Comment],
  })
  @ValidateNested()
  @Type(() => Comment)
  @IsOptional()
  comments?: Array<Comment>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => [Community],
  })
  @ValidateNested()
  @Type(() => Community)
  @IsOptional()
  moderates?: Array<Community>;

  @ApiProperty({
    required: false,
    type: () => [Community],
  })
  @ValidateNested()
  @Type(() => Community)
  @IsOptional()
  ownedCommunities?: Array<Community>;

  @ApiProperty({
    required: false,
    type: () => [PostLike],
  })
  @ValidateNested()
  @Type(() => PostLike)
  @IsOptional()
  postLikes?: Array<PostLike>;

  @ApiProperty({
    required: false,
    type: () => [Post],
  })
  @ValidateNested()
  @Type(() => Post)
  @IsOptional()
  posts?: Array<Post>;

  @ApiProperty({
    required: true,
    type: [String],
  })
  @IsString({
    each: true,
  })
  @Field(() => [String])
  roles!: Array<string>;

  @ApiProperty({
    required: false,
    type: () => [Community],
  })
  @ValidateNested()
  @Type(() => Community)
  @IsOptional()
  subscriptions?: Array<Community>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  username!: string;
}
export { User };
