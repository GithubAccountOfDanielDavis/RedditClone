/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CommentListRelationFilter } from "../../comment/base/CommentListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringFilter } from "../../util/StringFilter";
import { CommunityListRelationFilter } from "../../community/base/CommunityListRelationFilter";
import { PostListRelationFilter } from "../../post/base/PostListRelationFilter";
@InputType()
class UserWhereInput {
  @ApiProperty({
    required: false,
    type: () => CommentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CommentListRelationFilter)
  @IsOptional()
  @Field(() => CommentListRelationFilter, {
    nullable: true,
  })
  comments?: CommentListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => CommunityListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CommunityListRelationFilter)
  @IsOptional()
  @Field(() => CommunityListRelationFilter, {
    nullable: true,
  })
  moderates?: CommunityListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CommunityListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CommunityListRelationFilter)
  @IsOptional()
  @Field(() => CommunityListRelationFilter, {
    nullable: true,
  })
  ownedCommunities?: CommunityListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PostListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PostListRelationFilter)
  @IsOptional()
  @Field(() => PostListRelationFilter, {
    nullable: true,
  })
  posts?: PostListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CommunityListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CommunityListRelationFilter)
  @IsOptional()
  @Field(() => CommunityListRelationFilter, {
    nullable: true,
  })
  subscriptions?: CommunityListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  username?: StringFilter;
}
export { UserWhereInput };
