/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CommentLikeUpdateManyWithoutUsersInput } from "./CommentLikeUpdateManyWithoutUsersInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { CommentUpdateManyWithoutUsersInput } from "./CommentUpdateManyWithoutUsersInput";
import { CommunityUpdateManyWithoutUsersInput } from "./CommunityUpdateManyWithoutUsersInput";
import { PostLikeUpdateManyWithoutUsersInput } from "./PostLikeUpdateManyWithoutUsersInput";
import { PostUpdateManyWithoutUsersInput } from "./PostUpdateManyWithoutUsersInput";
@InputType()
class UserUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CommentLikeUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => CommentLikeUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => CommentLikeUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  commentLikes?: CommentLikeUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => CommentUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => CommentUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => CommentUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  comments?: CommentUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => CommunityUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => CommunityUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => CommunityUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  moderates?: CommunityUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => CommunityUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => CommunityUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => CommunityUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  ownedCommunities?: CommunityUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string;

  @ApiProperty({
    required: false,
    type: () => PostLikeUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => PostLikeUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => PostLikeUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  postLikes?: PostLikeUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => PostUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => PostUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => PostUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  posts?: PostUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: [String],
  })
  @IsString({
    each: true,
  })
  @IsOptional()
  @Field(() => [String], {
    nullable: true,
  })
  roles?: Array<string>;

  @ApiProperty({
    required: false,
    type: () => CommunityUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => CommunityUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => CommunityUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  subscriptions?: CommunityUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string;
}
export { UserUpdateInput };
